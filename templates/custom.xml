<templateSet group="custom">
  <template name="itd" value="it('$should$', (done) =&gt; {&#10;    $END$&#10;});" description="It done" toReformat="false" toShortenFQNames="true">
    <variable name="should" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="t" value="then(($PARAMS$) =&gt;{&#10;$END$&#10;})" description="then" toReformat="true" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="req" value="$NAME$ : (req, res) =&gt; {&#10;$END$&#10;}," description="sails request" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="if" value="if ($con$){&#10;$END$&#10;}" description="if" toReformat="true" toShortenFQNames="true">
    <variable name="con" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cw" value="console.warn($var$);$END$" description="console warn" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="re" value="const $name$ = require('$module$');" description="require" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="testg" value="  return request(sails.hooks.http.app)&#10;    .get('$url$')&#10;    .expect($status$);" description="supertest" toReformat="true" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="status" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="testp" value="  return request(sails.hooks.http.app)&#10;    .post('$url$')&#10;    .send({&#10;            $obj$&#10;          })&#10;    .expect($status$);" toReformat="false" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="status" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ca" value="catch(($PARAMS$) =&gt;{&#10;$END$&#10;})" description="catch" toReformat="true" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="err" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rep" value="const $name$ = Promise.promisify(require('$module$'));" description="require and promisify" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="psy" value="const $name$ = Promise.promisify($var$);" description="promisify" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="jsSuggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cfn" value="$NAME$($ARGS$){&#10;&#9;$END$&#10;}" description="class function" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="false" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_STATEMENT" value="false" />
    </context>
  </template>
  <template name="cl" value="console.log($VAR$);" description="console log" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ee" value="($PARAMS$) =&gt; {&#10;$END$&#10;}" description="es6 lambda function" toReformat="true" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="eee" value="$PARAMS$ =&gt; $END$" description="one line lambda" toReformat="true" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="imo" value="import { $IMPORTS$ } from '$LOCATION$';" description="import single object" toReformat="true" toShortenFQNames="true">
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="IMPORTS" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="itof" value="for (const $VAR$ of $ITERABLE$) {&#10;    $END$&#10;}" description="es6 for of loop" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ITERABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="reim" value="import {connect } from 'react-redux';&#10;import {bindActionCreators} from 'redux';" description="redux containe imports" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rred" value="import {$IMPORTS$} from '../actions/index';&#10;&#10;const INITIAL_STATE = $VAR$;&#10;&#10;export default function(state = INITIAL_STATE, action){&#10;&#9;switch(action.type){&#10;&#9;case $ACTION_TYPE$:&#10;&#9;&#9;$END$&#10;&#9;default:&#10;&#9;&#9;return state;&#10;&#9;}&#10;}" description="react reducer" toReformat="false" toShortenFQNames="true">
    <variable name="IMPORTS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ACTION_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="remap" value="function mapDispatchToProps(dispatch){&#10;&#9;return bindActionCreators($ACTION$, dispatch);&#10;} $END$" description="mapdispatchtoprops" toReformat="false" toShortenFQNames="true">
    <variable name="ACTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="imd" value="import $VAR$ from '$LOCATION$';" description="import default" toReformat="true" toShortenFQNames="true">
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="exsc" value="export const $NAME$ = '$NAME$';$END$" description="export constant" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rere" value="const reducer = (state, action) =&gt;{&#10;&#9;switch (action.type){&#10;&#9;&#9;case $VAR$:{&#10;&#9;&#9;&#9;return [...state, 3];&#10;&#9;&#9;}&#10;&#9;&#9;default:&#10;&#9;&#9;&#9;return DEFAULT_STATE;&#10;&#9;}&#10;};&#10;&#10;export reducer;" description="redux reducer" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tca" value="try {&#10;$VAR$&#10;} catch (err){&#10;$END$&#10;}" description="try catch" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>