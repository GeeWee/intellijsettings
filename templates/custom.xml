<templateSet group="custom">
  <template name="itd" value="it('$should$', (done) =&gt; {&#10;    $END$&#10;});" description="It done" toReformat="false" toShortenFQNames="true">
    <variable name="should" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="t" value="then(($PARAMS$) =&gt;{&#10;$END$&#10;})" description="then" toReformat="true" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="req" value="$NAME$ : (req, res) =&gt; {&#10;$END$&#10;}," description="sails request" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="if" value="if ($con$){&#10;$END$&#10;}" description="if" toReformat="true" toShortenFQNames="true">
    <variable name="con" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cw" value="console.warn($var$);$END$" description="console warn" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="re" value="const $name$ = require('$module$');" description="require" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="testg" value="  return request(sails.hooks.http.app)&#10;    .get('$url$')&#10;    .expect($status$);" description="supertest" toReformat="true" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="status" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="testp" value="  return request(sails.hooks.http.app)&#10;    .post('$url$')&#10;    .send({&#10;            $obj$&#10;          })&#10;    .expect($status$);" toReformat="false" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="status" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ca" value="catch(($PARAMS$) =&gt;{&#10;$END$&#10;})" description="catch" toReformat="true" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="err" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rep" value="const $name$ = Promise.promisify(require('$module$'));" description="require and promisify" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="psy" value="const $name$ = Promise.promisify($var$);" description="promisify" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="jsSuggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>